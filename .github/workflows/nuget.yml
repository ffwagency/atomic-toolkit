on:
  push:
    branches:
    - 'release'
env:
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  WAIT_SECONDS: 300 
jobs:
  nuget-release:
    runs-on: windows-latest
    steps: 

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Install dotnet'
        uses: actions/setup-dotnet@v1
        with:
         dotnet-version: '7.x'

      - name: 'Pack Atomic.Common'
        run: dotnet pack src\Atomic.Common\Atomic.Common.csproj --configuration Release --output ${{ github.workspace }}\output\Atomic.Common --include-symbols --include-source
          
      - name: 'Push Atomic.Common to Nuget'
        run: dotnet nuget push ${{ github.workspace }}\output\Atomic.Common\*.nupkg -k ${{SECRETS.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL}} --skip-duplicate

      - name: 'Wait'
        run: sleep ${{ env.WAIT_SECONDS}}

      - name: 'Pack Atomic.Api'
        run: dotnet pack src\Atomic.Api\Atomic.Api.csproj --configuration Release --output ${{ github.workspace }}\output\Atomic.Api --include-symbols --include-source
          
      - name: 'Push Atomic.Api to Nuget'
        run: dotnet nuget push ${{ github.workspace }}\output\Atomic.Api\*.nupkg -k ${{SECRETS.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL}} --skip-duplicate

      - name: 'Wait'
        run: sleep ${{ env.WAIT_SECONDS}}

      - name: 'Pack Atomic.OutputCache'
        run: dotnet pack src\Atomic.OutputCache\Atomic.OutputCache.csproj --configuration Release --output ${{ github.workspace }}\output\Atomic.OutputCache --include-symbols --include-source
          
      - name: 'Push Atomic.OutputCache to Nuget'
        run: dotnet nuget push ${{ github.workspace }}\output\Atomic.OutputCache\*.nupkg -k ${{SECRETS.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL}} --skip-duplicate

      - name: 'Wait'
        run: sleep ${{ env.WAIT_SECONDS}}

      - name: 'Pack Atomic.Seo'
        run: dotnet pack src\Atomic.Seo\Atomic.Seo.csproj --configuration Release --output ${{ github.workspace }}\output\Atomic.Seo --include-symbols --include-source
          
      - name: 'Push Atomic.OutputCache to Nuget'
        run: dotnet nuget push ${{ github.workspace }}\output\Atomic.Seo\*.nupkg -k ${{SECRETS.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL}} --skip-duplicate

      - name: 'Wait'
        run: sleep ${{ env.WAIT_SECONDS}}

      - name: 'Pack Atomic.StarterKit'
        run: dotnet pack src\Atomic.StarterKit\Atomic.StarterKit.csproj --configuration Release --output ${{ github.workspace }}\output\Atomic.StarterKit --include-symbols --include-source
          
      - name: 'Push Atomic.StarterKit to Nuget'
        run: dotnet nuget push ${{ github.workspace }}\output\Atomic.StarterKit\*.nupkg -k ${{SECRETS.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL}} --skip-duplicate

      - name: 'Wait'
        run: sleep ${{ env.WAIT_SECONDS}}